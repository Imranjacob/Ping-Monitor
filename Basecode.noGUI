import java.net.URL;
import java.io.OutputStream;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.InetAddress;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;

public class PingMonitor {

    private static final String SERVER_IP = "192.168.10.246";
    private static final String SERVER_IP2 ="10.1.5.19";
    private static final String SERVER_IP3 ="10.1.5.150";
    private static final String SERVER_IP4 ="10.1.5.106";
    private static final String SERVER_IP5 ="10.1.5.17";
    private static final String SERVER_IP6 ="10.1.5.11";
    private static final String TELEGRAM_BOT_TOKEN = "912533104:AAHv5WShRw45YX2DjEpcysHBnBEEnVTmMAU"; // Replace with your bot token
    private static final String CHAT_ID = "481872296"; // Replace with your chat ID
    private static int lastUpdateId = 0;

    public static void main(String[] args) {

        boolean isMessageSent = false;
        boolean SSMessage = false;
        boolean isMessageSent2 = false;
        boolean SSMessage2 = false;
        boolean isMessageSent3 = false;
        boolean SSMessage3 = false;
        boolean isMessageSent4 = false;
        boolean SSMessage4 = false;
        boolean isMessageSent5 = false;
        boolean SSMessage5 = false;
        boolean isMessageSent6 = false;
        boolean SSMessage6 = false;

        while (true) {
            if (pingServer(SERVER_IP)) { //server 1
                if (!SSMessage) {
                    sendTelegramMessage("Ping Successful " + SERVER_IP);
                    SSMessage = true;

                }
                isMessageSent = false;
            } else {
                if (!isMessageSent) {
                    sendTelegramMessage("Ping Server Failure " + SERVER_IP);
                }
                SSMessage = false;
            }


           try {
               Thread.sleep(5000);
           } catch (InterruptedException e) {
              e.printStackTrace();
           }

                if (pingServer(SERVER_IP2)) {  //Server 2
                    if (!SSMessage2) {
                        sendTelegramMessage("Ping Successful " + SERVER_IP2);
                        SSMessage2 = true;

                    }
                    isMessageSent2 = false;
                } else {
                    if (!isMessageSent2) {
                        sendTelegramMessage("Ping Server Failure " + SERVER_IP2);
                    }
                    SSMessage2 = false;
                }


               try {
                    Thread.sleep(5000);
                } catch (InterruptedException e) {
                   e.printStackTrace();
                }

            if (pingServer(SERVER_IP3)) {  //server 3
                if (!SSMessage3) {
                    sendTelegramMessage("Ping Successful " + SERVER_IP3);
                    SSMessage3 = true;

                }
                isMessageSent3 = false;
            } else {
                if (!isMessageSent3) {
                    sendTelegramMessage("Ping Server Failure " + SERVER_IP3);
                }
                SSMessage3 = false;
            }


            try {
                Thread.sleep(5000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

            if (pingServer(SERVER_IP4)) {  //server 4
                if (!SSMessage4) {
                    sendTelegramMessage("Ping Successful " + SERVER_IP4);
                    SSMessage4 = true;

                }
                isMessageSent4 = false;
            } else {
                if (!isMessageSent4) {
                    sendTelegramMessage("Ping Server Failure " + SERVER_IP4);
                }
                SSMessage4 = false;
            }


            try {
                Thread.sleep(5000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

            if (pingServer(SERVER_IP5)) {  //server 5
                if (!SSMessage5) {
                    sendTelegramMessage("Ping Successful " + SERVER_IP5);
                    SSMessage5 = true;

                }
                isMessageSent5 = false;
            } else {
                if (!isMessageSent5) {
                    sendTelegramMessage("Ping Server Failure " + SERVER_IP5);
                }
                SSMessage5 = false;
            }


            try {
                Thread.sleep(5000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

            if (pingServer(SERVER_IP6)) {  //server 5
                if (!SSMessage6) {
                    sendTelegramMessage("Ping Successful " + SERVER_IP6);
                    SSMessage6 = true;

                }
                isMessageSent6 = false;
            } else {
                if (!isMessageSent6) {
                    sendTelegramMessage("Ping Server Failure " + SERVER_IP6);
                }
                SSMessage6 = false;
            }

            checkTelegramUpdates();

            try {
                Thread.sleep(5000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }


            }
        }




        private static boolean pingServer (String ipAddress){
            try {
                InetAddress address = InetAddress.getByName(ipAddress);
                return address.isReachable(1000); // Timeout of 1 second
            } catch (Exception e) {
                return false;
            }
        }


    private static void sendTelegramMessage(String message) {
        try {
            String urlString = "https://api.telegram.org/bot" + TELEGRAM_BOT_TOKEN + "/sendMessage";
            URL url = new URL(urlString);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("POST");
            conn.setDoOutput(true);
            String params = "chat_id=" + CHAT_ID + "&text=" + message;

            try (OutputStream os = conn.getOutputStream()) {
                os.write(params.getBytes());
                os.flush();
            }

            conn.getResponseCode(); // To execute the request
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static void checkTelegramUpdates() {
        try {
            String urlString = "https://api.telegram.org/bot" + TELEGRAM_BOT_TOKEN + "/getUpdates?offset=" + (lastUpdateId + 1);
            URL url = new URL(urlString);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            conn.setDoOutput(true);

            try (BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()))) {
                String inputLine;
                StringBuilder response = new StringBuilder();
                while ((inputLine = in.readLine()) != null) {
                    response.append(inputLine);
                }
                String updates = response.toString();
                processUpdates(updates);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static void processUpdates(String updates) {
        // Parse the updates string to find incoming messages
        if (updates.contains("\"update_id\":")) {
            String[] parts = updates.split("\"update_id\":");
            for (int i = 1; i < parts.length; i++) {
                String updateIdStr = parts[i].split(",")[0].trim();
                int updateId = Integer.parseInt(updateIdStr);
                if (updateId > lastUpdateId) {
                    lastUpdateId = updateId; // Update last update ID
                    String messageText = parts[i].split("\"text\":\"")[1].split("\"")[0]; // Extracting the message text
                    if (messageText.equalsIgnoreCase("status")) {
                        sendTelegramMessage("The Ping Monitor is running.");
                    }
                }
            }
        }
    }

}
